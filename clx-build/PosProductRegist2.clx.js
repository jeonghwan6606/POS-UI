/*
 * App URI: PosProductRegist2
 * Source Location: PosProductRegist2.clx
 *
 * This file was generated by eXBuilder6 compiler(1.0.4878), Don't edit manually.
 */
(function() {
	var app = new cpr.core.App("PosProductRegist2", { 
		onPrepare: function(loader) {
		},
		onCreate: function(/* cpr.core.AppInstance */ app, exports) {
			var linker = {};
			// Start - User Script
			/************************************************
			 * POSProductRegist2.js
			 * Created at 2024. 1. 21. 오후 10:39:49.
			 *
			 * @author PC2
			 ************************************************/

			/*
			 * 루트 컨테이너에서 load 이벤트 발생 시 호출.
			 * 앱이 최초 구성된후 최초 랜더링 직후에 발생하는 이벤트 입니다.
			 */
			function onBodyLoad(e){
				getClientList();
			}



			/*
			 * 서버로부터 데이터를 조회하여 그리드에 표시하는 함수
			 */
			function getClientList() {
				
				
				
				var searchinput = "";
				var inputValue = app.lookup("searchClient").value;
				
				if (inputValue !== null && inputValue.trim() !== "") {
				    searchinput = inputValue.trim();
				}
				
				console.log(searchinput);
					
				 // 서브미션 생성
			    var submission = new cpr.protocols.Submission();
				
				// 조회할 데이터의 URL 설정
			    submission.action = "/POS/GetClient.do"; 

			    // response data의 type 설정
			    submission.responseType = "javascript";
				    
			     // 서버로 전송할 데이터를 설정합니다.
			    submission.setParameters("CLIENT_NM", searchinput);
			     // 서버로 전송할 데이터를 설정합니다.
			    submission.setParameters("CLIENT_NO", searchinput);

			    

			    // 서버로 요청 전송
			    submission.send()
			    
			    submission.addEventListener("submit-success", function(e) {
				    var subMainList = e.control;
				    var jsonObj = JSON.parse(subMainList.xhr.responseText);
				    console.log(jsonObj);
				
				    // 가져온 데이터를 그리드에 표시하기
				    var grd1 = app.lookup("grd1");
				
				    // 데이터셋 설정
				    var ds2 = app.lookup("client");
				    ds2.clear(); // 기존 데이터 모두 삭제
				
				    // 가져온 JSON 데이터를 데이터셋에 설정
				    var dataList = jsonObj.clientList; // 예시 데이터에서 salesData로 설정했다고 가정
				    for (var i = 0; i < dataList.length; i++) {
				        var rowData = dataList[i];
				        
				        console.log(rowData);
				        
				        var newRow = ds2.addRow();
				        var lastIndex = ds2.getRowCount() - 1;
				        
				        // 각 항목에 대해 직접 설정
				        ds2.setValue(lastIndex, "CLIENT_NM", rowData.CLIENT_NM);
				        ds2.setValue(lastIndex, "CLIENT_NO", rowData.CLIENT_NO);
				        ds2.setValue(lastIndex, "REPRES_NM", rowData.REPRES_NM);
				                 
				    }
				
				});
			    
			    
			}



			/*
			 * "확 인" 버튼에서 click 이벤트 발생 시 호출.
			 * 사용자가 컨트롤을 클릭할 때 발생하는 이벤트.
			 */
			function onButtonClick(e){
			    // 선택된 데이터를 부모 창으로 전달합니다.
			    var selectedRow = app.lookup("grd1").getSelectedRow();
			     var rowData = selectedRow.getRowData();
			    // 선택된 행이 없을 경우 처리
			    if (!selectedRow) {
			        console.log("선택된 행이 없습니다.");
			        return;
			    }
			    var ds1 = app.lookup("client");
			    
			    // 선택된 행의 데이터에서 필드 값을 가져옵니다.
			    var CLIENT_NM = rowData["CLIENT_NM"];
			    var CLIENT_NO = rowData["CLIENT_NO"]
			    var REPRES_NM = rowData["REPRES_NM"]
			    
			    console.log(CLIENT_NO);
			    
			    // 필요한 데이터를 부모 창으로 전달합니다.
			    window.opener.postMessage({
			        CLIENT_NM: CLIENT_NM,
			        CLIENT_NO: CLIENT_NO,
			        REPRES_NM: REPRES_NM
			    }, "*");
			    
			    // 자식 창을 닫습니다.
			     window.close();
			}

			/*
			 * 그리드에서 selection-change 이벤트 발생 시 호출.
			 * detail의 cell 클릭하여 설정된 selectionunit에 해당되는 단위가 선택될 때 발생하는 이벤트.
			 */
			function onGrd1SelectionChange2(e){
				var grd1 = e.control;
				
			}

			/*
			 * 서치 인풋에서 search 이벤트 발생 시 호출.
			 * Searchinput의 enter키 또는 검색버튼을 클릭하여 인풋의 값이 Search될때 발생하는 이벤트
			 */
			function onSearchClientSearch(e){
				var searchClient = e.control;
				var searchClient = app.lookup("searchClient").value;
				
				getClientList();
				
			};
			// End - User Script
			
			// Header
			var dataSet_1 = new cpr.data.DataSet("client");
			dataSet_1.parseData({
				"columns": [
					{"name": "CLIENT_NO"},
					{"name": "CLIENT_NM"},
					{"name": "REPRES_NM"}
				],
				"rows": []
			});
			app.register(dataSet_1);
			var dataMap_1 = new cpr.data.DataMap("account");
			dataMap_1.parseData({
				"columns" : [{"name": "acc_name"}]
			});
			app.register(dataMap_1);
			app.supportMedia("all", "new-screen");
			
			// Configure root container
			var container = app.getContainer();
			container.style.css({
				"width" : "100%",
				"height" : "100%"
			});
			
			// Layout
			var xYLayout_1 = new cpr.controls.layouts.XYLayout();
			container.setLayout(xYLayout_1);
			
			// UI Configuration
			var searchInput_1 = new cpr.controls.SearchInput("searchClient");
			searchInput_1.placeholder = "거래처명 혹은 거래처번호 검색";
			if(typeof onSearchClientValueChange == "function") {
				searchInput_1.addEventListener("value-change", onSearchClientValueChange);
			}
			if(typeof onSearchClientSearch == "function") {
				searchInput_1.addEventListener("search", onSearchClientSearch);
			}
			container.addChild(searchInput_1, {
				"top": "75px",
				"left": "20px",
				"width": "360px",
				"height": "35px"
			});
			
			var output_1 = new cpr.controls.Output();
			output_1.value = "  거래처 검색";
			output_1.style.css({
				"border-bottom-color" : "#D0D0D0",
				"font-weight" : "bold",
				"border-bottom-width" : "4px",
				"font-size" : "20px",
				"border-bottom-style" : "solid"
			});
			container.addChild(output_1, {
				"top": "20px",
				"left": "20px",
				"width": "360px",
				"height": "45px"
			});
			
			var grid_1 = new cpr.controls.Grid("grd1");
			grid_1.init({
				"dataSet": app.lookup("client"),
				"columnMovable": true,
				"resizableColumns": "all",
				"columns": [
					{"width": "41px"},
					{"width": "100px"},
					{"width": "100px"},
					{"width": "100px"}
				],
				"header": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "CLIENT_NO";
								cell.text = "거래처번호";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "CLIENT_NM";
								cell.text = "거래처명";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.filterable = false;
								cell.sortable = false;
								cell.targetColumnName = "REPRES_NM";
								cell.text = "대표자성명";
							}
						}
					]
				},
				"detail": {
					"rows": [{"height": "24px"}],
					"cells": [
						{
							"constraint": {"rowIndex": 0, "colIndex": 0},
							"configurator": function(cell){
								cell.columnType = "radio";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 1},
							"configurator": function(cell){
								cell.columnName = "CLIENT_NO";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 2},
							"configurator": function(cell){
								cell.columnName = "CLIENT_NM";
							}
						},
						{
							"constraint": {"rowIndex": 0, "colIndex": 3},
							"configurator": function(cell){
								cell.columnName = "REPRES_NM";
							}
						}
					]
				}
			});
			grid_1.bind("rowIndexerStartNum").toDataMap(app.lookup("account"), "acc_name");
			if(typeof onGrd1SelectionChange2 == "function") {
				grid_1.addEventListener("selection-change", onGrd1SelectionChange2);
			}
			container.addChild(grid_1, {
				"top": "120px",
				"left": "20px",
				"width": "360px",
				"height": "425px"
			});
			
			var button_1 = new cpr.controls.Button();
			button_1.value = "확 인";
			if(typeof onButtonClick == "function") {
				button_1.addEventListener("click", onButtonClick);
			}
			container.addChild(button_1, {
				"top": "555px",
				"left": "165px",
				"width": "70px",
				"height": "25px"
			});
			if(typeof onBodyLoad == "function"){
				app.addEventListener("load", onBodyLoad);
			}
		}
	});
	app.title = "PosProductRegist2";
	cpr.core.Platform.INSTANCE.register(app);
})();
